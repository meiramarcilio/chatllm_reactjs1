{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\projects\\\\llm\\\\chatllm_reactjs1\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function insertEntry(text, [entries, setEntries]) {\n  // Display user typed message:\n  setEntries(prev => [...prev, [text, 'userMsg']]);\n  try {\n    const res = await fetch('http://localhost:5000/api/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: text\n      })\n    });\n    const data = await res.json();\n    // Retrieve AI message sent back:\n    //const response = data.choices[0].message.content; // for ChatGPT using OpenAI\n    const response = data.response; //just for ollama\n    // console.log(response); // Print message on console\n    // Print on UI client:\n    setEntries(prev => [...prev, [response, 'AIMsg']]);\n  } catch (error) {\n    console.error('Error calling Back-end:', error);\n  } finally {}\n}\nfunction App() {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const handleNewEntry = async text => {\n    if (text.trim() !== '') {\n      insertEntry(text, [entries, setEntries]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: /*#__PURE__*/_jsxDEV(Main, {\n        entries: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"App-footer\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {\n        onSubmit: handleNewEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QwXuxOBCVNdGQT4jCo9qBV+7uvY=\");\n_c = App;\nfunction Main({\n  entries\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"messages\",\n    children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: entry[1],\n      children: entry[0]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Main;\nfunction Footer({\n  onSubmit\n}) {\n  _s2();\n  const txtUserMessage = useRef(null);\n  const [text, setText] = useState('');\n  useEffect(() => {\n    var _txtUserMessage$curre;\n    (_txtUserMessage$curre = txtUserMessage.current) === null || _txtUserMessage$curre === void 0 ? void 0 : _txtUserMessage$curre.focus(); // Focus the input when component mounts\n  }, []);\n  const handleKeyDown = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      var _txtUserMessage$curre2;\n      event.preventDefault(); // Prevent newline\n      //console.log('Typed text: ' + text);\n      onSubmit(text, 'userMsg'); // Call\n      setText(''); // Clear textarea content\n      (_txtUserMessage$curre2 = txtUserMessage.current) === null || _txtUserMessage$curre2 === void 0 ? void 0 : _txtUserMessage$curre2.focus(); // Focus the input again\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: txtUserMessage,\n      value: text,\n      onKeyDown: handleKeyDown,\n      onChange: e => setText(e.target.value),\n      maxLength: \"200px\",\n      placeholder: \"Ask me something, and press Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s2(Footer, \"DGqRCHVEHXDkHpjcXdLP2F+FP64=\");\n_c3 = Footer;\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    class: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"\",\n        children: \"Web Summarizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Header;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Main\");\n$RefreshReg$(_c3, \"Footer\");\n$RefreshReg$(_c4, \"Header\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","insertEntry","text","entries","setEntries","prev","res","fetch","method","headers","body","JSON","stringify","message","data","json","response","error","console","App","_s","handleNewEntry","trim","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Main","Footer","onSubmit","_c","class","map","entry","index","_c2","_s2","txtUserMessage","setText","_txtUserMessage$curre","current","focus","handleKeyDown","event","key","shiftKey","_txtUserMessage$curre2","preventDefault","ref","value","onKeyDown","onChange","e","target","maxLength","placeholder","_c3","href","_c4","$RefreshReg$"],"sources":["D:/OneDrive/projects/llm/chatllm_reactjs1/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useRef, useEffect, useState} from 'react';\n\nasync function insertEntry(text, [entries, setEntries]){\n  // Display user typed message:\n  setEntries((prev) => [...prev, [text, 'userMsg']]);\n  try {\n    const res = await fetch('http://localhost:5000/api/chat', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: text })\n    });\n    const data = await res.json();\n    // Retrieve AI message sent back:\n    //const response = data.choices[0].message.content; // for ChatGPT using OpenAI\n    const response = data.response; //just for ollama\n    // console.log(response); // Print message on console\n    // Print on UI client:\n    setEntries((prev) => [...prev, [response, 'AIMsg']]);\n  } catch (error) {\n    console.error('Error calling Back-end:', error);\n  }\n  finally{\n\n  }\n}\n\nfunction App() {\n  const [entries, setEntries] = useState([]);\n \n  const handleNewEntry = async (text) => {\n    if (text.trim() !== '') {\n      insertEntry(text, [entries, setEntries]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n      <main className=\"App-main\">\n        <Main entries={entries} />\n      </main>\n      <footer className=\"App-footer\">\n        <Footer onSubmit={handleNewEntry} />\n      </footer>\n    </div>\n  );\n}\n\nfunction Main({ entries }){\n  return (\n    <div class=\"messages\">\n      {\n        entries.map((entry, index) => (\n          <div key={index} class={entry[1]}>\n            {entry[0]}\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nfunction Footer({ onSubmit }){\n  const txtUserMessage = useRef(null);\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    txtUserMessage.current?.focus(); // Focus the input when component mounts\n  }, []);\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault(); // Prevent newline\n      //console.log('Typed text: ' + text);\n      onSubmit(text, 'userMsg'); // Call\n      setText(''); // Clear textarea content\n      txtUserMessage.current?.focus(); // Focus the input again\n    }\n  }\n  return (\n    <div>\n      <textarea \n        ref={txtUserMessage} \n        value={text}\n        onKeyDown={handleKeyDown}\n        onChange={(e) => setText(e.target.value)}\n        maxLength=\"200px\"\n        placeholder=\"Ask me something, and press Enter\"\n         />\n    </div>\n  );\n}\n\nfunction Header(){\n  return (\n    <ul class=\"nav\">\n      <li><a href=\"\">Chat</a></li>\n      <li><a href=\"\">Web Summarizer</a></li>\n    </ul>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}